name: CI/CD Pipeline

on:
  push:
    branches:
      - master 

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_WRITE_USERNAME: ${{ secrets.DB_WRITE_USERNAME }}
      DB_WRITE_PASSWORD: ${{ secrets.DB_WRITE_PASSWORD }}
      EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      ACCESS_KEY_PEARL_S3_EXPORT: ${{ secrets.ACCESS_KEY_PEARL_S3_EXPORT }}
      SECRET_KEY_PEARL_S3_EXPORT: ${{ secrets.SECRET_KEY_PEARL_S3_EXPORT }}
      ACCESS_KEY_CASATIVO_S3_EXPORT: ${{ secrets.ACCESS_KEY_CASATIVO_S3_EXPORT }}
      SECRET_KEY_CASATIVO_S3_EXPORT: ${{ secrets.SECRET_KEY_CASATIVO_S3_EXPORT }}
      ACCESS_KEY_NATURA_S3_EXPORT: ${{ secrets.ACCESS_KEY_NATURA_S3_EXPORT }}
      SECRET_KEY_NATURA_S3_EXPORT: ${{ secrets.SECRET_KEY_NATURA_S3_EXPORT }}
      PEARL_UNSUBSCRIBE_TOKEN_ENCRYPTION_KEY: ${{ secrets.PEARL_UNSUBSCRIBE_TOKEN_ENCRYPTION_KEY }}
      PEARL_UNSUBSCRIBE_TOKEN_ENCRYPTION_IV: ${{ secrets.PEARL_UNSUBSCRIBE_TOKEN_ENCRYPTION_IV }}
      CASATIVO_UNSUBSCRIBE_TOKEN_ENCRYPTION_KEY: ${{ secrets.CASATIVO_UNSUBSCRIBE_TOKEN_ENCRYPTION_KEY }}
      CASATIVO_UNSUBSCRIBE_TOKEN_ENCRYPTION_IV: ${{ secrets.CASATIVO_UNSUBSCRIBE_TOKEN_ENCRYPTION_IV }}
      NATURA_UNSUBSCRIBE_TOKEN_ENCRYPTION_KEY: ${{ secrets.NATURA_UNSUBSCRIBE_TOKEN_ENCRYPTION_KEY }}
      NATURA_UNSUBSCRIBE_TOKEN_ENCRYPTION_IV: ${{ secrets.NATURA_UNSUBSCRIBE_TOKEN_ENCRYPTION_IV }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'  

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean install

    - name: Run tests
      run: mvn test

    - name: Build Docker image
      run: |
        docker build -t singidunumpni.azurecr.io/pni:latest .

    - name: Log in to Azure Container Registry
      run: |
        echo ${{ secrets.AZURE_PASS }} | docker login singidunumpni.azurecr.io -u singidunumpni --password-stdin

    - name: Push Docker image to ACR
      run: |
        docker push singidunumpni.azurecr.io/pni:latest    

    - name: Secrets
      run: |
        echo ${{ secrets.AZURE_CLI_USERNAME }} | sed 's/./& /g' 
        
    - name: Log in to Azure CLI
      run: |
          az login -u ${{ secrets.AZURE_CLI_USERNAME }} -p ${{ secrets.AZURE_CLI_PASS }}

    - name: Create Azure Container Instance
      run: |
        az container create --resource-group pniGroup --name pnikont --image singidunumpni.azurecr.io/pni:latest --ports 8080 --registry-username singidunumpni --registry-password ${{ secrets.AZURE_PASS }}  


